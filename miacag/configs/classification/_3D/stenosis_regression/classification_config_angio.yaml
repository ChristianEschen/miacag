# inputs:

tensorboard_comment: 'test_v1'
DataSetPath: "/home/gandalf/miacag/data/angio"
query: "SELECT * FROM ?schema_name.?table_name WHERE phase IS DISTINCT FROM 'test';"
query_pred: "SELECT * FROM ?schema_name.?table_name WHERE phase IS DISTINCT FROM 'test';"

query_transform: "SELECT * FROM ?schema_name.?table_name;"
query_split: "SELECT * FROM ?schema_name.?table_name WHERE phase IS DISTINCT FROM 'test';"

query_test: "SELECT * FROM ?schema_name.?table_name;"
query_train_plot: "SELECT * FROM ?schema_name.?table_name WHERE (phase = 'train');"
query_val_plot: "SELECT * FROM ?schema_name.?table_name WHERE (phase = 'val');"
query_test_plot: "SELECT * FROM ?schema_name.?table_name WHERE (phase = 'test');"

schema_name: "cag"
table_name: "dicom_table2x"
TestSize: 0.2

query_count_stenosis_train:
|
  select distinct on ("PatientID", "StudyInstanceUID") ?schema_name.?table_name.*
  from ?schema_name.?table_name
  WHERE (phase = 'train')
  order by "PatientID", "StudyInstanceUID";

query_count_stenosis_val:
|
  select distinct on ("PatientID", "StudyInstanceUID") ?schema_name.?table_name.*
  from ?schema_name.?table_name
  WHERE (phase = 'val')
  order by "PatientID", "StudyInstanceUID";

query_count_stenosis_test:
|
  select distinct on ("PatientID", "StudyInstanceUID") ?schema_name.?table_name.*
  from ?schema_name.?table_name
  WHERE (phase = 'test')
  order by "PatientID", "StudyInstanceUID";


# postgres configs
username: 'gandalf'
password: '123qweasd'
database: 'mydb'
host: "localhost"
# outputs
output: "/home/gandalf/angiography_data/runs/stenosis_regression_rca_v22_l1smooth_lr0p02_beta_1p0_r2dp1"
# use a fixed random seed to guarantee that when you run the code twice you will get the same outcome
manual_seed: 0

dominans: 'r_dom'
process_labels: 'True'
# model configuration
model:
# model class, e.g. UNet
  dimension: 2D+T
  encoder_depth: 4
  in_channels: 1
  backbone: "mvit_base_16x4" #"r2plus1_18" #"mvit_base_16x4" # "mvit_base_32x3" #"slowfast8x8" #r2plus1d_18 #r2plus1d_18 #x3d_s #x3d_l #r2plus1d_18 # x3d_l
  num_classes: 1
  pretrained: "True" #"None" #/home/sauroman/mia/models/torchhub/3D/r2plus1_18 #"/home/sauroman/mia/models/torchhub/3D/mvit_base_16x4"
  pretrain_model: "None" #"/home/sauroman/mia/models/torchhub/3D/mvit_base_16x4"
  pretrain_encoder: "None"
# Data loader configuration
task_type: "regression" #"classification"
#labels_names: ["sten_proc_1_prox_rca"]
labels_names: ["sten_proc_2_midt_rca", "sten_proc_1_prox_rca"]
weighted_sampler: "False"
cache_num: 'None'
cache_rate: 0.001 #0.25
cache_test: 'False'
loaders:
  #dimension order
  format: 'dicom'
  store_memory: False

  use_amp: True
  

  CropForeGround: False
  isCT: False

  spatial_resize: False

  pixdim_height: 4 # 0.213828125
  pixdim_width: 4 # 0.213828125
  pixdim_depth: 66 # 0.33 # 1/66.673
  Resize_height: 224 #224 #312 #224 #224 # 224
  Resize_width: 224 #224 #312 #224 #224 # 224
  Resize_depth: 16 #-1

  spatial_scaling: "False"
  temporal_scaling: "False"
  translate: "False"
  rotate: "False"

  Crop_height: 224 #224 #312 #224 #224 # 224
  Crop_width: 224 #224 #312 #224 #224 # 224
  Crop_depth: 16
  batchSize: 4


  # validation method 
  val_method:
    type: patches #'sliding_window' # patches | sliding_window
    samples: 1
    saliency: 'False'
    misprediction: 'False'
    threshold_sten: 0.70
    threshold_ffr: 0.80
# trainer configuration
trainer:
  # how many iterations between validations
  validate_frequency: 10
  # max number of epochs
  epochs: 100
  # number of epochs before use early stopping
  max_stagnation: 1000000000000000000

# optimizer configuration
optimizer:
  type: "sgd" # 
  # initial learning rate
  learning_rate: 0.0020 # 0.0003125 # 0.05*BS/256 -> 0.1 if BS=512
  # weight decay
  weight_decay: 0.0005 #5e-4 
  momentum: 0.9

lr_scheduler:
  type: None #
  lr_warmup_epochs: 10
  steps_for_drop: 500
  gamma: 0.2
# loss function configuration
loss:
  # loss function to be used during training
  beta: 0.5 # maybe 0.5
  name: ['L1smooth', 'L1smooth'] #CE_pixel CE_pixel
# evaluation metric configuration
eval_metric_train:
  name: ['RMSE', 'RMSE']
eval_metric_val:
  name: ['RMSE', 'RMSE']
# learning rate scheduler configuration

